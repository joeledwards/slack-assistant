service: SlackAssistant
frameworkVersion: '3'

custom:
  awsProfile: ${file(config.yml):config.awsProfile, 'default'}
  awsRegion: ${file(config.yml):config.awsRegion, 'us-west-2'}
  lambdaFunctionName: ${file(config.yml):config.lambdaFunctionName, 'slack-assistant-${sls:stage}'}
  lambdaFunctionTimeout: ${file(config.yml):config.lambdaFunctionTimeout, '120'}
  dynamodbTableName: ${file(config.yml):config.dynamodbTableName, 'slack_assistant_conversation_history_${sls:stage}'}
  codePrefix: ${file(config.yml):config.codePrefix, 'slack-assistant/'}
  codeBucket: ${file(config.yml):config.codeBucket}
  openaiApiKey: ${file(config.yml):config.openaiApiKey}
  openaiModel: ${file(config.yml):config.openaiModel}
  openaiTemperature: ${file(config.yml):config.openaiTemperature}
  openaiSystemMessage: ${file(config.yml):config.openaiSystemMessage}
  slackSigningKey: ${file(config.yml):config.slackSigningKey}
  slackWebhook: ${file(config.yml):config.slackWebhook}

provider:
  name: aws
  runtime: nodejs16.x
  profile: ${self:custom.awsProfile}
  region: ${self:custom.awsRegion}
  deploymentMethod: direct
  deploymentBucket:
    name: ${self:custom.codeBucket}
    serverSideEncryption: 'aws:kms'
  deploymentPrefix: ${self:custom.codePrefix}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ HistoryTable, Arn ]
        - Effect: Allow
          Action:
            - s3:GetObject
          Resource:
            - 'arn:aws:s3:::${self:custom.codeBucket}/*'

functions:
  SlackAssistant:
    name: ${self:custom.lambdaFunctionName}
    handler: lib/index.handler
    url: true
    timeout: ${self:custom.lambdaFunctionTimeout}
    environment:
      SLACK_ASSISTANT_DYNAMODB_TABLE: ${self:custom.dynamodbTableName}
      SLACK_ASSISTANT_OPENAI_API_KEY: ${self:custom.openaiApiKey}
      SLACK_ASSISTANT_OPENAI_MODEL: ${self:custom.openaiModel}
      SLACK_ASSISTANT_OPENAI_SYSTEM_MESSAGE: ${self:custom.openaiSystemMessage}
      SLACK_ASSISTANT_OPENAI_TEMPERATURE: ${self:custom.openaiTemperature}
      SLACK_ASSISTANT_SLACK_SIGNING_KEY: ${self:custom.slackSigningKey}
      SLACK_ASSISTANT_SLACK_WEBHOOK: ${self:custom.slackWebhook}

package:
  include:
    - lib/**
  exclude:
    - node_modules/aws-sdk/**

resources:
  Resources:
    HistoryTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: key
            AttributeType: S
        KeySchema:
          - AttributeName: key
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.dynamodbTableName}
